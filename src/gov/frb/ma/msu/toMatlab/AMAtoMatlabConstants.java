/* Generated By:JavaCC: Do not edit this line. AMAtoMatlabConstants.java */
package gov.frb.ma.msu.toMatlab;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AMAtoMatlabConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MODEL = 5;
  /** RegularExpression Id. */
  int EQUATION = 6;
  /** RegularExpression Id. */
  int EQ = 7;
  /** RegularExpression Id. */
  int EQTYPE = 8;
  /** RegularExpression Id. */
  int ENDOG = 9;
  /** RegularExpression Id. */
  int END = 10;
  /** RegularExpression Id. */
  int PROMPT = 11;
  /** RegularExpression Id. */
  int DATA = 12;
  /** RegularExpression Id. */
  int DTRM = 13;
  /** RegularExpression Id. */
  int NOTD = 14;
  /** RegularExpression Id. */
  int IMPOSED = 15;
  /** RegularExpression Id. */
  int STOCH = 16;
  /** RegularExpression Id. */
  int LAG = 17;
  /** RegularExpression Id. */
  int ELAG = 18;
  /** RegularExpression Id. */
  int LEAD = 19;
  /** RegularExpression Id. */
  int ENDOGENOUS = 20;
  /** RegularExpression Id. */
  int EXOGENOUS = 21;
  /** RegularExpression Id. */
  int FILEMOD = 22;
  /** RegularExpression Id. */
  int INNOV = 23;
  /** RegularExpression Id. */
  int PLUS = 24;
  /** RegularExpression Id. */
  int MINUS = 25;
  /** RegularExpression Id. */
  int MULTIPLY = 26;
  /** RegularExpression Id. */
  int DIVIDE = 27;
  /** RegularExpression Id. */
  int EXP = 28;
  /** RegularExpression Id. */
  int FLOAT = 29;
  /** RegularExpression Id. */
  int FLOATBASE = 30;
  /** RegularExpression Id. */
  int INTEGER = 31;
  /** RegularExpression Id. */
  int DIGIT = 32;
  /** RegularExpression Id. */
  int IDENTIFIER = 33;
  /** RegularExpression Id. */
  int LETTER = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int EQUALS = 36;
  /** RegularExpression Id. */
  int OPENPAREN = 37;
  /** RegularExpression Id. */
  int CLOSEPAREN = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\"MODEL\"",
    "\"EQUATION\"",
    "\"EQ\"",
    "\"EQTYPE\"",
    "\"ENDOG\"",
    "\"END\"",
    "\">\"",
    "\"_DATA\"",
    "\"_DTRM\"",
    "\"_NOTD\"",
    "\"IMPOSED\"",
    "\"STOCH\"",
    "\"LAG\"",
    "\"ELAG\"",
    "\"LEAD\"",
    "<ENDOGENOUS>",
    "<EXOGENOUS>",
    "<FILEMOD>",
    "<INNOV>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "<EXP>",
    "<FLOAT>",
    "<FLOATBASE>",
    "<INTEGER>",
    "<DIGIT>",
    "<IDENTIFIER>",
    "<LETTER>",
    "\",\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
  };

}
